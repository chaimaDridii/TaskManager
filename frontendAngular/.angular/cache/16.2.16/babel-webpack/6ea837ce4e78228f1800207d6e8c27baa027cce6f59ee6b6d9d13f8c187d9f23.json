{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let TaskListComponent = class TaskListComponent {\n  constructor(taskService) {\n    this.taskService = taskService;\n    this.tasks = [];\n    this.newTask = {\n      title: '',\n      description: '',\n      completed: false,\n      status: 'PENDING'\n    }; // Initialisation d'une tâche vide\n  }\n\n  ngOnInit() {\n    this.taskService.getTasks().subscribe(data => {\n      this.tasks = data;\n    });\n  }\n  // Méthode pour ajouter une nouvelle tâche\n  addTask() {\n    this.taskService.addTask(this.newTask).subscribe(task => {\n      this.tasks.push(task); // Ajoute la tâche ajoutée au tableau des tâches\n      this.newTask = {\n        title: '',\n        description: '',\n        completed: false,\n        status: 'PENDING'\n      }; // Réinitialise le formulaire\n    });\n  }\n\n  deleteTask(id) {\n    if (id !== undefined) {\n      // Vérifie si l'id est défini\n      this.taskService.deleteTask(id).subscribe(() => {\n        this.tasks = this.tasks.filter(task => task.id !== id); // Retirer la tâche de la liste après suppression\n      });\n    } else {\n      console.error(\"ID is undefined\");\n    }\n  }\n  // Mettre à jour une tâche\n  updateTask(id, updatedTask) {\n    if (id !== undefined) {\n      // Vérifie si l'id est défini\n      this.taskService.updateTask(id, updatedTask).subscribe(task => {\n        const index = this.tasks.findIndex(t => t.id === task.id);\n        if (index !== -1) {\n          this.tasks[index] = task; // Remplacer la tâche dans la liste\n        }\n      });\n    } else {\n      console.error(\"ID is undefined\");\n    }\n  }\n  finishTask(task) {\n    const updatedTask = {\n      ...task,\n      status: 'COMPLETED'\n    };\n    this.taskService.updateTask(task.id, updatedTask).subscribe(updatedTask => {\n      const index = this.tasks.findIndex(t => t.id === updatedTask.id);\n      if (index !== -1) {\n        this.tasks[index] = updatedTask; // Mettre à jour la tâche dans la liste\n      }\n    });\n  }\n};\n\nTaskListComponent = __decorate([Component({\n  selector: 'app-task-list',\n  templateUrl: './task-list.component.html',\n  styleUrls: ['./task-list.component.css']\n})], TaskListComponent);","map":{"version":3,"names":["Component","TaskListComponent","constructor","taskService","tasks","newTask","title","description","completed","status","ngOnInit","getTasks","subscribe","data","addTask","task","push","deleteTask","id","undefined","filter","console","error","updateTask","updatedTask","index","findIndex","t","finishTask","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\task_manager\\task-manager\\src\\app\\task-list\\task-list.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { TaskService } from '../task.service';\nimport { Task } from '../models/task';  // Assure-toi que ton modèle Task est correctement importé\n\n@Component({\n  selector: 'app-task-list',\n  templateUrl: './task-list.component.html',\n  styleUrls: ['./task-list.component.css']\n})\nexport class TaskListComponent implements OnInit {\n  tasks: Task[] = [];\n  newTask: Task = { title: '', description: '', completed: false, status: 'PENDING' }; // Initialisation d'une tâche vide\n\n  constructor(private taskService: TaskService) {}\n\n  ngOnInit(): void {\n    this.taskService.getTasks().subscribe((data: Task[]) => {\n      this.tasks = data;\n    });\n  }\n\n  // Méthode pour ajouter une nouvelle tâche\n  addTask(): void {\n    this.taskService.addTask(this.newTask).subscribe((task: Task) => {\n      this.tasks.push(task);  // Ajoute la tâche ajoutée au tableau des tâches\n      this.newTask = { title: '', description: '', completed: false, status: 'PENDING' };  // Réinitialise le formulaire\n    });\n  }\n  deleteTask(id: number | undefined): void {\n    if (id !== undefined) {  // Vérifie si l'id est défini\n      this.taskService.deleteTask(id).subscribe(() => {\n        this.tasks = this.tasks.filter(task => task.id !== id);  // Retirer la tâche de la liste après suppression\n      });\n    } else {\n      console.error(\"ID is undefined\");\n    }\n  }\n\n  // Mettre à jour une tâche\n  updateTask(id: number | undefined, updatedTask: Task): void {\n    if (id !== undefined) {  // Vérifie si l'id est défini\n      this.taskService.updateTask(id, updatedTask).subscribe((task) => {\n        const index = this.tasks.findIndex(t => t.id === task.id);\n        if (index !== -1) {\n          this.tasks[index] = task;  // Remplacer la tâche dans la liste\n        }\n      });\n    } else {\n      console.error(\"ID is undefined\");\n    }}\n    finishTask(task: Task): void {\n      const updatedTask = { ...task, status: 'COMPLETED' };\n      this.taskService.updateTask(task.id, updatedTask).subscribe((updatedTask) => {\n        const index = this.tasks.findIndex(t => t.id === updatedTask.id);\n        if (index !== -1) {\n          this.tasks[index] = updatedTask;  // Mettre à jour la tâche dans la liste\n        }\n      });\n    }\n    \n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}