{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../task.service\";\nimport * as i2 from \"@angular/forms\";\nexport class TaskAddComponent {\n  constructor(taskService) {\n    this.taskService = taskService;\n    this.newTask = {\n      title: '',\n      description: '',\n      completed: false\n    };\n  }\n  addTask() {\n    this.taskService.addTask(this.newTask).subscribe(task => {\n      console.log('Tâche ajoutée avec succès :', task);\n      this.resetForm();\n    }, error => {\n      console.error('Erreur lors de l\\'ajout de la tâche :', error);\n    });\n  }\n  resetForm() {\n    this.newTask = {\n      title: '',\n      description: '',\n      completed: false\n    };\n  }\n  static {\n    this.ɵfac = function TaskAddComponent_Factory(t) {\n      return new (t || TaskAddComponent)(i0.ɵɵdirectiveInject(i1.TaskService));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: TaskAddComponent,\n      selectors: [[\"app-task-add\"]],\n      decls: 17,\n      vars: 3,\n      consts: [[3, \"ngSubmit\"], [\"for\", \"title\"], [\"type\", \"text\", \"id\", \"title\", \"name\", \"title\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"description\"], [\"id\", \"description\", \"name\", \"description\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"checkbox\", \"name\", \"completed\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\"]],\n      template: function TaskAddComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"h3\");\n          i0.ɵɵtext(1, \"Ajouter une Nouvelle T\\u00E2che\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(2, \"form\", 0);\n          i0.ɵɵlistener(\"ngSubmit\", function TaskAddComponent_Template_form_ngSubmit_2_listener() {\n            return ctx.addTask();\n          });\n          i0.ɵɵelementStart(3, \"div\")(4, \"label\", 1);\n          i0.ɵɵtext(5, \"Titre :\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(6, \"input\", 2);\n          i0.ɵɵlistener(\"ngModelChange\", function TaskAddComponent_Template_input_ngModelChange_6_listener($event) {\n            return ctx.newTask.title = $event;\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(7, \"div\")(8, \"label\", 3);\n          i0.ɵɵtext(9, \"Description :\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(10, \"textarea\", 4);\n          i0.ɵɵlistener(\"ngModelChange\", function TaskAddComponent_Template_textarea_ngModelChange_10_listener($event) {\n            return ctx.newTask.description = $event;\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(11, \"div\")(12, \"label\")(13, \"input\", 5);\n          i0.ɵɵlistener(\"ngModelChange\", function TaskAddComponent_Template_input_ngModelChange_13_listener($event) {\n            return ctx.newTask.completed = $event;\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵtext(14, \" T\\u00E2che Compl\\u00E9t\\u00E9e \");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(15, \"button\", 6);\n          i0.ɵɵtext(16, \"Ajouter\");\n          i0.ɵɵelementEnd()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(6);\n          i0.ɵɵproperty(\"ngModel\", ctx.newTask.title);\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngModel\", ctx.newTask.description);\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"ngModel\", ctx.newTask.completed);\n        }\n      },\n      dependencies: [i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.CheckboxControlValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.RequiredValidator, i2.NgModel, i2.NgForm],\n      styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n    });\n  }\n}","map":{"version":3,"names":["TaskAddComponent","constructor","taskService","newTask","title","description","completed","addTask","subscribe","task","console","log","resetForm","error","i0","ɵɵdirectiveInject","i1","TaskService","selectors","decls","vars","consts","template","TaskAddComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","TaskAddComponent_Template_form_ngSubmit_2_listener","TaskAddComponent_Template_input_ngModelChange_6_listener","$event","TaskAddComponent_Template_textarea_ngModelChange_10_listener","TaskAddComponent_Template_input_ngModelChange_13_listener","ɵɵadvance","ɵɵproperty"],"sources":["C:\\task_manager\\task-manager\\src\\app\\task-add\\task-add.component.ts","C:\\task_manager\\task-manager\\src\\app\\task-add\\task-add.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { TaskService } from '../task.service';\nimport { Task } from '../models/task';\n\n@Component({\n  selector: 'app-task-add',\n  templateUrl: './task-add.component.html',\n  styleUrls: ['./task-add.component.css'],\n})\nexport class TaskAddComponent {\n  newTask: Task = {\n    title: '',\n    description: '',\n    completed: false,\n  };\n\n  constructor(private taskService: TaskService) {}\n\n  addTask(): void {\n    this.taskService.addTask(this.newTask).subscribe(\n      (task) => {\n        console.log('Tâche ajoutée avec succès :', task);\n        this.resetForm();\n      },\n      (error) => {\n        console.error('Erreur lors de l\\'ajout de la tâche :', error);\n      }\n    );\n  }\n\n  resetForm(): void {\n    this.newTask = {\n      title: '',\n      description: '',\n      completed: false,\n    };\n  }\n}\n","<h3>Ajouter une Nouvelle Tâche</h3>\n<form (ngSubmit)=\"addTask()\">\n  <div>\n    <label for=\"title\">Titre :</label>\n    <input\n      type=\"text\"\n      id=\"title\"\n      [(ngModel)]=\"newTask.title\"\n      name=\"title\"\n      required\n    />\n  </div>\n  <div>\n    <label for=\"description\">Description :</label>\n    <textarea\n      id=\"description\"\n      [(ngModel)]=\"newTask.description\"\n      name=\"description\"\n    ></textarea>\n  </div>\n  <div>\n    <label>\n      <input\n        type=\"checkbox\"\n        [(ngModel)]=\"newTask.completed\"\n        name=\"completed\"\n      />\n      Tâche Complétée\n    </label>\n  </div>\n  <button type=\"submit\">Ajouter</button>\n</form>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}