{"ast":null,"code":"import { environment } from '../environments/environment'; // Import de l'environnement\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class TaskService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = environment.apiUrl;\n  }\n  getTasks() {\n    return this.http.get(this.apiUrl);\n  }\n  addTask(task) {\n    return this.http.post(this.apiUrl, task);\n  }\n  deleteTask(id) {\n    return this.http.delete(`${this.apiUrl}/${id}`);\n  }\n  updateTask(id, task) {\n    return this.http.put(`${this.apiUrl}/${id}`, task);\n  }\n  static {\n    this.ɵfac = function TaskService_Factory(t) {\n      return new (t || TaskService)(i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: TaskService,\n      factory: TaskService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["environment","TaskService","constructor","http","apiUrl","getTasks","get","addTask","task","post","deleteTask","id","delete","updateTask","put","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\task_manager\\task-manager\\src\\app\\task.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Task } from './models/task';\nimport { environment } from '../environments/environment'; // Import de l'environnement\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class TaskService {\n  private apiUrl = environment.apiUrl;\n\n  constructor(private http: HttpClient) {}\n\n  getTasks(): Observable<Task[]> {\n    return this.http.get<Task[]>(this.apiUrl);\n  }\n\n  addTask(task: Task): Observable<Task> {\n    return this.http.post<Task>(this.apiUrl, task);\n  }\n\n  deleteTask(id: number): Observable<void> {\n    return this.http.delete<void>(`${this.apiUrl}/${id}`);\n  }\n\n  updateTask(id: number, task: Task): Observable<Task> {\n    return this.http.put<Task>(`${this.apiUrl}/${id}`, task);\n  }\n}\n"],"mappings":"AAIA,SAASA,WAAW,QAAQ,6BAA6B,CAAC,CAAC;;;AAK3D,OAAM,MAAOC,WAAW;EAGtBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,MAAM,GAAGJ,WAAW,CAACI,MAAM;EAEI;EAEvCC,QAAQA,CAAA;IACN,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAS,IAAI,CAACF,MAAM,CAAC;EAC3C;EAEAG,OAAOA,CAACC,IAAU;IAChB,OAAO,IAAI,CAACL,IAAI,CAACM,IAAI,CAAO,IAAI,CAACL,MAAM,EAAEI,IAAI,CAAC;EAChD;EAEAE,UAAUA,CAACC,EAAU;IACnB,OAAO,IAAI,CAACR,IAAI,CAACS,MAAM,CAAO,GAAG,IAAI,CAACR,MAAM,IAAIO,EAAE,EAAE,CAAC;EACvD;EAEAE,UAAUA,CAACF,EAAU,EAAEH,IAAU;IAC/B,OAAO,IAAI,CAACL,IAAI,CAACW,GAAG,CAAO,GAAG,IAAI,CAACV,MAAM,IAAIO,EAAE,EAAE,EAAEH,IAAI,CAAC;EAC1D;;;uBAnBWP,WAAW,EAAAc,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;IAAA;EAAA;;;aAAXjB,WAAW;MAAAkB,OAAA,EAAXlB,WAAW,CAAAmB,IAAA;MAAAC,UAAA,EAFV;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}