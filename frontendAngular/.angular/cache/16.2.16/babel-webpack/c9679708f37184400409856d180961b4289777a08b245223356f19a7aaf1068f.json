{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../task.service\";\nimport * as i2 from \"@angular/forms\";\nexport class TaskAddComponent {\n  constructor(taskService) {\n    this.taskService = taskService;\n    this.newTask = {\n      title: '',\n      description: '',\n      completed: false,\n      status: 'PENDING'\n    };\n  }\n  // Méthode pour envoyer la nouvelle tâche au backend\n  addTask() {\n    this.taskService.addTask(this.newTask).subscribe(response => {\n      console.log('Task added successfully!', response);\n    }, error => {\n      console.error('Error adding task!', error);\n    });\n  }\n  static {\n    this.ɵfac = function TaskAddComponent_Factory(t) {\n      return new (t || TaskAddComponent)(i0.ɵɵdirectiveInject(i1.TaskService));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: TaskAddComponent,\n      selectors: [[\"app-task-add\"]],\n      decls: 26,\n      vars: 4,\n      consts: [[1, \"add-task\"], [3, \"ngSubmit\"], [\"for\", \"title\"], [\"type\", \"text\", \"id\", \"title\", \"name\", \"title\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"description\"], [\"id\", \"description\", \"name\", \"description\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"completed\"], [\"type\", \"checkbox\", \"id\", \"completed\", \"name\", \"completed\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"status\"], [\"id\", \"status\", \"name\", \"status\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"value\", \"PENDING\"], [\"value\", \"COMPLETED\"], [\"type\", \"submit\"]],\n      template: function TaskAddComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\");\n          i0.ɵɵtext(2, \"Ajouter une nouvelle t\\u00E2che\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(3, \"form\", 1);\n          i0.ɵɵlistener(\"ngSubmit\", function TaskAddComponent_Template_form_ngSubmit_3_listener() {\n            return ctx.addTask();\n          });\n          i0.ɵɵelementStart(4, \"div\")(5, \"label\", 2);\n          i0.ɵɵtext(6, \"Titre\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(7, \"input\", 3);\n          i0.ɵɵlistener(\"ngModelChange\", function TaskAddComponent_Template_input_ngModelChange_7_listener($event) {\n            return ctx.newTask.title = $event;\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(8, \"div\")(9, \"label\", 4);\n          i0.ɵɵtext(10, \"Description\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(11, \"textarea\", 5);\n          i0.ɵɵlistener(\"ngModelChange\", function TaskAddComponent_Template_textarea_ngModelChange_11_listener($event) {\n            return ctx.newTask.description = $event;\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(12, \"div\")(13, \"label\", 6);\n          i0.ɵɵtext(14, \"Compl\\u00E9t\\u00E9e\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(15, \"input\", 7);\n          i0.ɵɵlistener(\"ngModelChange\", function TaskAddComponent_Template_input_ngModelChange_15_listener($event) {\n            return ctx.newTask.completed = $event;\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(16, \"div\")(17, \"label\", 8);\n          i0.ɵɵtext(18, \"Statut\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(19, \"select\", 9);\n          i0.ɵɵlistener(\"ngModelChange\", function TaskAddComponent_Template_select_ngModelChange_19_listener($event) {\n            return ctx.newTask.status = $event;\n          });\n          i0.ɵɵelementStart(20, \"option\", 10);\n          i0.ɵɵtext(21, \"En attente\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(22, \"option\", 11);\n          i0.ɵɵtext(23, \"Termin\\u00E9e\");\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(24, \"button\", 12);\n          i0.ɵɵtext(25, \"Ajouter la t\\u00E2che\");\n          i0.ɵɵelementEnd()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(7);\n          i0.ɵɵproperty(\"ngModel\", ctx.newTask.title);\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngModel\", ctx.newTask.description);\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngModel\", ctx.newTask.completed);\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngModel\", ctx.newTask.status);\n        }\n      },\n      dependencies: [i2.ɵNgNoValidate, i2.NgSelectOption, i2.ɵNgSelectMultipleOption, i2.DefaultValueAccessor, i2.CheckboxControlValueAccessor, i2.SelectControlValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.RequiredValidator, i2.NgModel, i2.NgForm],\n      styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n    });\n  }\n}","map":{"version":3,"names":["TaskAddComponent","constructor","taskService","newTask","title","description","completed","status","addTask","subscribe","response","console","log","error","i0","ɵɵdirectiveInject","i1","TaskService","selectors","decls","vars","consts","template","TaskAddComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","TaskAddComponent_Template_form_ngSubmit_3_listener","TaskAddComponent_Template_input_ngModelChange_7_listener","$event","TaskAddComponent_Template_textarea_ngModelChange_11_listener","TaskAddComponent_Template_input_ngModelChange_15_listener","TaskAddComponent_Template_select_ngModelChange_19_listener","ɵɵadvance","ɵɵproperty"],"sources":["C:\\task_manager\\task-manager\\src\\app\\task-add\\task-add.component.ts","C:\\task_manager\\task-manager\\src\\app\\task-add\\task-add.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { TaskService } from '../task.service';\nimport { Task } from '../models/task';\n\n@Component({\n  selector: 'app-task-add',\n  templateUrl: './task-add.component.html',\n  styleUrls: ['./task-add.component.css'],\n})\nexport class TaskAddComponent {\n    newTask: Task = {\n      title: '',\n      description: '',\n      completed: false,\n      status: 'PENDING'\n    };\n  \n    constructor(private taskService: TaskService) {}\n  \n    // Méthode pour envoyer la nouvelle tâche au backend\n    addTask() {\n      this.taskService.addTask(this.newTask).subscribe(\n        (response) => {\n          console.log('Task added successfully!', response);\n        },\n        (error) => {\n          console.error('Error adding task!', error);\n        }\n      );\n    }\n  }","<div class=\"add-task\">\n    <h2>Ajouter une nouvelle tâche</h2>\n    <form (ngSubmit)=\"addTask()\">\n      <div>\n        <label for=\"title\">Titre</label>\n        <input type=\"text\" id=\"title\" [(ngModel)]=\"newTask.title\" name=\"title\" required />\n      </div>\n      <div>\n        <label for=\"description\">Description</label>\n        <textarea id=\"description\" [(ngModel)]=\"newTask.description\" name=\"description\" required></textarea>\n      </div>\n      <div>\n        <label for=\"completed\">Complétée</label>\n        <input type=\"checkbox\" id=\"completed\" [(ngModel)]=\"newTask.completed\" name=\"completed\" />\n      </div>\n      <div>\n        <label for=\"status\">Statut</label>\n        <select id=\"status\" [(ngModel)]=\"newTask.status\" name=\"status\" required>\n          <option value=\"PENDING\">En attente</option>\n          <option value=\"COMPLETED\">Terminée</option>\n        </select>\n      </div>\n      <button type=\"submit\">Ajouter la tâche</button>\n    </form>\n  </div>\n  "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}