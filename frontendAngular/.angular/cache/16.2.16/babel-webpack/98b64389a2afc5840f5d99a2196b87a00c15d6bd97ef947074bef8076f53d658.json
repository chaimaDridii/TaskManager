{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../task.service\";\nfunction TaskListComponent_li_13_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"li\")(1, \"input\", 8);\n    i0.ɵɵlistener(\"change\", function TaskListComponent_li_13_Template_input_change_1_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const task_r1 = restoredCtx.$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.toggleCompleted(task_r1));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(2, \"span\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"button\", 9);\n    i0.ɵɵlistener(\"click\", function TaskListComponent_li_13_Template_button_click_4_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const task_r1 = restoredCtx.$implicit;\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.deleteTask(task_r1.id));\n    });\n    i0.ɵɵtext(5, \"Delete\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const task_r1 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"checked\", task_r1.completed);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate2(\"\", task_r1.title, \" - \", task_r1.completed ? \"Completed\" : \"Pending\", \"\");\n  }\n}\nexport class TaskListComponent {\n  constructor(taskService) {\n    this.taskService = taskService;\n    this.tasks = [];\n    this.newTask = {\n      id: 0,\n      title: '',\n      description: '',\n      completed: false,\n      status: 'PENDING'\n    };\n  }\n  ngOnInit() {\n    this.loadTasks();\n  }\n  // Charger toutes les tâches\n  loadTasks() {\n    this.taskService.getTasks().subscribe(data => {\n      this.tasks = data;\n    });\n  }\n  // Ajouter une tâche\n  addTask() {\n    if (this.newTask.title && this.newTask.description) {\n      this.taskService.addTask(this.newTask).subscribe(task => {\n        this.tasks.push(task);\n        this.newTask = {\n          id: 0,\n          title: '',\n          description: '',\n          completed: false,\n          status: 'PENDING'\n        }; // Réinitialiser la tâche\n      });\n    }\n  }\n  // Supprimer une tâche\n  deleteTask(id) {\n    this.taskService.deleteTask(id).subscribe(() => {\n      this.tasks = this.tasks.filter(task => task.id !== id);\n    });\n  }\n  // Modifier une tâche (inversion de `completed`)\n  toggleCompleted(task) {\n    task.completed = !task.completed;\n    this.taskService.updateTask(task.id, task).subscribe(() => {\n      console.log('Task updated:', task);\n    });\n  }\n  static {\n    this.ɵfac = function TaskListComponent_Factory(t) {\n      return new (t || TaskListComponent)(i0.ɵɵdirectiveInject(i1.TaskService));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: TaskListComponent,\n      selectors: [[\"app-task-list\"]],\n      decls: 14,\n      vars: 3,\n      consts: [[1, \"task-container\"], [1, \"add-task\"], [3, \"submit\"], [\"type\", \"text\", \"placeholder\", \"Task Title\", \"name\", \"title\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"placeholder\", \"Task Description\", \"name\", \"description\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\"], [1, \"task-list\"], [4, \"ngFor\", \"ngForOf\"], [\"type\", \"checkbox\", 3, \"checked\", \"change\"], [3, \"click\"]],\n      template: function TaskListComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h3\");\n          i0.ɵɵtext(3, \"Add New Task\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(4, \"form\", 2);\n          i0.ɵɵlistener(\"submit\", function TaskListComponent_Template_form_submit_4_listener($event) {\n            ctx.addTask();\n            return $event.preventDefault();\n          });\n          i0.ɵɵelementStart(5, \"input\", 3);\n          i0.ɵɵlistener(\"ngModelChange\", function TaskListComponent_Template_input_ngModelChange_5_listener($event) {\n            return ctx.newTask.title = $event;\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(6, \"textarea\", 4);\n          i0.ɵɵlistener(\"ngModelChange\", function TaskListComponent_Template_textarea_ngModelChange_6_listener($event) {\n            return ctx.newTask.description = $event;\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(7, \"button\", 5);\n          i0.ɵɵtext(8, \"Add Task\");\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(9, \"div\", 6)(10, \"h3\");\n          i0.ɵɵtext(11, \"Task List\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(12, \"ul\");\n          i0.ɵɵtemplate(13, TaskListComponent_li_13_Template, 6, 3, \"li\", 7);\n          i0.ɵɵelementEnd()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"ngModel\", ctx.newTask.title);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngModel\", ctx.newTask.description);\n          i0.ɵɵadvance(7);\n          i0.ɵɵproperty(\"ngForOf\", ctx.tasks);\n        }\n      },\n      styles: [\".task-container[_ngcontent-%COMP%] {\\n    width: 600px;\\n    margin: auto;\\n  }\\n  \\n  .add-task[_ngcontent-%COMP%] {\\n    margin-bottom: 20px;\\n  }\\n  \\n  .add-task[_ngcontent-%COMP%]   form[_ngcontent-%COMP%] {\\n    display: flex;\\n    flex-direction: column;\\n  }\\n  \\n  .add-task[_ngcontent-%COMP%]   input[_ngcontent-%COMP%], .add-task[_ngcontent-%COMP%]   textarea[_ngcontent-%COMP%] {\\n    margin-bottom: 10px;\\n    padding: 10px;\\n    font-size: 14px;\\n  }\\n  \\n  .task-list[_ngcontent-%COMP%]   ul[_ngcontent-%COMP%] {\\n    list-style: none;\\n    padding: 0;\\n  }\\n  \\n  .task-list[_ngcontent-%COMP%]   li[_ngcontent-%COMP%] {\\n    display: flex;\\n    align-items: center;\\n    margin-bottom: 10px;\\n  }\\n  \\n  .task-list[_ngcontent-%COMP%]   button[_ngcontent-%COMP%] {\\n    margin-left: auto;\\n    padding: 5px 10px;\\n    color: white;\\n    background: red;\\n    border: none;\\n    border-radius: 5px;\\n  }\\n  \\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvdGFzay1saXN0L3Rhc2stbGlzdC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksWUFBWTtJQUNaLFlBQVk7RUFDZDs7RUFFQTtJQUNFLG1CQUFtQjtFQUNyQjs7RUFFQTtJQUNFLGFBQWE7SUFDYixzQkFBc0I7RUFDeEI7O0VBRUE7O0lBRUUsbUJBQW1CO0lBQ25CLGFBQWE7SUFDYixlQUFlO0VBQ2pCOztFQUVBO0lBQ0UsZ0JBQWdCO0lBQ2hCLFVBQVU7RUFDWjs7RUFFQTtJQUNFLGFBQWE7SUFDYixtQkFBbUI7SUFDbkIsbUJBQW1CO0VBQ3JCOztFQUVBO0lBQ0UsaUJBQWlCO0lBQ2pCLGlCQUFpQjtJQUNqQixZQUFZO0lBQ1osZUFBZTtJQUNmLFlBQVk7SUFDWixrQkFBa0I7RUFDcEIiLCJzb3VyY2VzQ29udGVudCI6WyIudGFzay1jb250YWluZXIge1xyXG4gICAgd2lkdGg6IDYwMHB4O1xyXG4gICAgbWFyZ2luOiBhdXRvO1xyXG4gIH1cclxuICBcclxuICAuYWRkLXRhc2sge1xyXG4gICAgbWFyZ2luLWJvdHRvbTogMjBweDtcclxuICB9XHJcbiAgXHJcbiAgLmFkZC10YXNrIGZvcm0ge1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgfVxyXG4gIFxyXG4gIC5hZGQtdGFzayBpbnB1dCxcclxuICAuYWRkLXRhc2sgdGV4dGFyZWEge1xyXG4gICAgbWFyZ2luLWJvdHRvbTogMTBweDtcclxuICAgIHBhZGRpbmc6IDEwcHg7XHJcbiAgICBmb250LXNpemU6IDE0cHg7XHJcbiAgfVxyXG4gIFxyXG4gIC50YXNrLWxpc3QgdWwge1xyXG4gICAgbGlzdC1zdHlsZTogbm9uZTtcclxuICAgIHBhZGRpbmc6IDA7XHJcbiAgfVxyXG4gIFxyXG4gIC50YXNrLWxpc3QgbGkge1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICBtYXJnaW4tYm90dG9tOiAxMHB4O1xyXG4gIH1cclxuICBcclxuICAudGFzay1saXN0IGJ1dHRvbiB7XHJcbiAgICBtYXJnaW4tbGVmdDogYXV0bztcclxuICAgIHBhZGRpbmc6IDVweCAxMHB4O1xyXG4gICAgY29sb3I6IHdoaXRlO1xyXG4gICAgYmFja2dyb3VuZDogcmVkO1xyXG4gICAgYm9yZGVyOiBub25lO1xyXG4gICAgYm9yZGVyLXJhZGl1czogNXB4O1xyXG4gIH1cclxuICAiXSwic291cmNlUm9vdCI6IiJ9 */\"]\n    });\n  }\n}","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵlistener","TaskListComponent_li_13_Template_input_change_1_listener","restoredCtx","ɵɵrestoreView","_r3","task_r1","$implicit","ctx_r2","ɵɵnextContext","ɵɵresetView","toggleCompleted","ɵɵelementEnd","ɵɵtext","TaskListComponent_li_13_Template_button_click_4_listener","ctx_r4","deleteTask","id","ɵɵadvance","ɵɵproperty","completed","ɵɵtextInterpolate2","title","TaskListComponent","constructor","taskService","tasks","newTask","description","status","ngOnInit","loadTasks","getTasks","subscribe","data","addTask","task","push","filter","updateTask","console","log","ɵɵdirectiveInject","i1","TaskService","selectors","decls","vars","consts","template","TaskListComponent_Template","rf","ctx","TaskListComponent_Template_form_submit_4_listener","$event","preventDefault","TaskListComponent_Template_input_ngModelChange_5_listener","TaskListComponent_Template_textarea_ngModelChange_6_listener","ɵɵtemplate","TaskListComponent_li_13_Template"],"sources":["C:\\task_manager\\task-manager\\src\\app\\task-list\\task-list.component.ts","C:\\task_manager\\task-manager\\src\\app\\task-list\\task-list.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { TaskService } from '../task.service';\nimport { Task } from '../models/task';\n\n@Component({\n  selector: 'app-task-list',\n  templateUrl: './task-list.component.html',\n  styleUrls: ['./task-list.component.css'],\n})\nexport class TaskListComponent implements OnInit {\n  tasks: Task[] = [];\n  newTask: Task = {\n    id: 0,\n    title: '',\n    description: '',\n    completed: false,\n    status: 'PENDING',\n  };\n\n  constructor(private taskService: TaskService) {}\n\n  ngOnInit(): void {\n    this.loadTasks();\n  }\n\n  // Charger toutes les tâches\n  loadTasks(): void {\n    this.taskService.getTasks().subscribe((data: Task[]) => {\n      this.tasks = data;\n    });\n  }\n\n  // Ajouter une tâche\n  addTask(): void {\n    if (this.newTask.title && this.newTask.description) {\n      this.taskService.addTask(this.newTask).subscribe((task: Task) => {\n        this.tasks.push(task);\n        this.newTask = { id: 0, title: '', description: '', completed: false, status: 'PENDING' }; // Réinitialiser la tâche\n      });\n    }\n  }\n\n  // Supprimer une tâche\n  deleteTask(id: number): void {\n    this.taskService.deleteTask(id).subscribe(() => {\n      this.tasks = this.tasks.filter((task) => task.id !== id);\n    });\n  }\n\n  // Modifier une tâche (inversion de `completed`)\n  toggleCompleted(task: Task): void {\n    task.completed = !task.completed;\n    this.taskService.updateTask(task.id, task).subscribe(() => {\n      console.log('Task updated:', task);\n    });\n  }\n}\n","<div class=\"task-container\">\n    <!-- Formulaire pour ajouter une nouvelle tâche -->\n    <div class=\"add-task\">\n      <h3>Add New Task</h3>\n      <form (submit)=\"addTask(); $event.preventDefault()\">\n        <input\n          type=\"text\"\n          placeholder=\"Task Title\"\n          [(ngModel)]=\"newTask.title\"\n          name=\"title\"\n          required\n        />\n        <textarea\n          placeholder=\"Task Description\"\n          [(ngModel)]=\"newTask.description\"\n          name=\"description\"\n          required\n        ></textarea>\n        <button type=\"submit\">Add Task</button>\n      </form>\n    </div>\n  \n    <!-- Liste des tâches -->\n    <div class=\"task-list\">\n      <h3>Task List</h3>\n      <ul>\n        <li *ngFor=\"let task of tasks\">\n          <input\n            type=\"checkbox\"\n            [checked]=\"task.completed\"\n            (change)=\"toggleCompleted(task)\"\n          />\n          <span>{{ task.title }} - {{ task.completed ? 'Completed' : 'Pending' }}</span>\n          <button (click)=\"deleteTask(task.id)\">Delete</button>\n        </li>\n      </ul>\n    </div>\n  </div>\n  "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}