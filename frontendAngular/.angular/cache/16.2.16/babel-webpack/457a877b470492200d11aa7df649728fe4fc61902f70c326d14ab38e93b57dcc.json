{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../task.service\";\nexport class TaskListComponent {\n  constructor(taskService) {\n    this.taskService = taskService;\n    this.tasks = [];\n    this.newTask = {\n      id: 0,\n      title: '',\n      description: '',\n      completed: false,\n      status: 'PENDING'\n    };\n  }\n  ngOnInit() {\n    this.loadTasks();\n  }\n  // Charger toutes les tâches\n  loadTasks() {\n    this.taskService.getTasks().subscribe(data => {\n      this.tasks = data;\n    });\n  }\n  // Ajouter une tâche\n  addTask() {\n    if (this.newTask.title && this.newTask.description) {\n      this.taskService.addTask(this.newTask).subscribe(task => {\n        this.tasks.push(task);\n        this.newTask = {\n          id: 0,\n          title: '',\n          description: '',\n          completed: false,\n          status: 'PENDING'\n        }; // Réinitialiser la tâche\n      });\n    }\n  }\n\n  static {\n    this.ɵfac = function TaskListComponent_Factory(t) {\n      return new (t || TaskListComponent)(i0.ɵɵdirectiveInject(i1.TaskService));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: TaskListComponent,\n      selectors: [[\"app-task-list\"]],\n      decls: 0,\n      vars: 0,\n      template: function TaskListComponent_Template(rf, ctx) {},\n      styles: [\".task-container[_ngcontent-%COMP%] {\\n    width: 600px;\\n    margin: auto;\\n  }\\n  \\n  .add-task[_ngcontent-%COMP%] {\\n    margin-bottom: 20px;\\n  }\\n  \\n  .add-task[_ngcontent-%COMP%]   form[_ngcontent-%COMP%] {\\n    display: flex;\\n    flex-direction: column;\\n  }\\n  \\n  .add-task[_ngcontent-%COMP%]   input[_ngcontent-%COMP%], .add-task[_ngcontent-%COMP%]   textarea[_ngcontent-%COMP%] {\\n    margin-bottom: 10px;\\n    padding: 10px;\\n    font-size: 14px;\\n  }\\n  \\n  .task-list[_ngcontent-%COMP%]   ul[_ngcontent-%COMP%] {\\n    list-style: none;\\n    padding: 0;\\n  }\\n  \\n  .task-list[_ngcontent-%COMP%]   li[_ngcontent-%COMP%] {\\n    display: flex;\\n    align-items: center;\\n    margin-bottom: 10px;\\n  }\\n  \\n  .task-list[_ngcontent-%COMP%]   button[_ngcontent-%COMP%] {\\n    margin-left: auto;\\n    padding: 5px 10px;\\n    color: white;\\n    background: red;\\n    border: none;\\n    border-radius: 5px;\\n  }\\n  \\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvdGFzay1saXN0L3Rhc2stbGlzdC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksWUFBWTtJQUNaLFlBQVk7RUFDZDs7RUFFQTtJQUNFLG1CQUFtQjtFQUNyQjs7RUFFQTtJQUNFLGFBQWE7SUFDYixzQkFBc0I7RUFDeEI7O0VBRUE7O0lBRUUsbUJBQW1CO0lBQ25CLGFBQWE7SUFDYixlQUFlO0VBQ2pCOztFQUVBO0lBQ0UsZ0JBQWdCO0lBQ2hCLFVBQVU7RUFDWjs7RUFFQTtJQUNFLGFBQWE7SUFDYixtQkFBbUI7SUFDbkIsbUJBQW1CO0VBQ3JCOztFQUVBO0lBQ0UsaUJBQWlCO0lBQ2pCLGlCQUFpQjtJQUNqQixZQUFZO0lBQ1osZUFBZTtJQUNmLFlBQVk7SUFDWixrQkFBa0I7RUFDcEIiLCJzb3VyY2VzQ29udGVudCI6WyIudGFzay1jb250YWluZXIge1xyXG4gICAgd2lkdGg6IDYwMHB4O1xyXG4gICAgbWFyZ2luOiBhdXRvO1xyXG4gIH1cclxuICBcclxuICAuYWRkLXRhc2sge1xyXG4gICAgbWFyZ2luLWJvdHRvbTogMjBweDtcclxuICB9XHJcbiAgXHJcbiAgLmFkZC10YXNrIGZvcm0ge1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgfVxyXG4gIFxyXG4gIC5hZGQtdGFzayBpbnB1dCxcclxuICAuYWRkLXRhc2sgdGV4dGFyZWEge1xyXG4gICAgbWFyZ2luLWJvdHRvbTogMTBweDtcclxuICAgIHBhZGRpbmc6IDEwcHg7XHJcbiAgICBmb250LXNpemU6IDE0cHg7XHJcbiAgfVxyXG4gIFxyXG4gIC50YXNrLWxpc3QgdWwge1xyXG4gICAgbGlzdC1zdHlsZTogbm9uZTtcclxuICAgIHBhZGRpbmc6IDA7XHJcbiAgfVxyXG4gIFxyXG4gIC50YXNrLWxpc3QgbGkge1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICBtYXJnaW4tYm90dG9tOiAxMHB4O1xyXG4gIH1cclxuICBcclxuICAudGFzay1saXN0IGJ1dHRvbiB7XHJcbiAgICBtYXJnaW4tbGVmdDogYXV0bztcclxuICAgIHBhZGRpbmc6IDVweCAxMHB4O1xyXG4gICAgY29sb3I6IHdoaXRlO1xyXG4gICAgYmFja2dyb3VuZDogcmVkO1xyXG4gICAgYm9yZGVyOiBub25lO1xyXG4gICAgYm9yZGVyLXJhZGl1czogNXB4O1xyXG4gIH1cclxuICAiXSwic291cmNlUm9vdCI6IiJ9 */\"]\n    });\n  }\n}","map":{"version":3,"names":["TaskListComponent","constructor","taskService","tasks","newTask","id","title","description","completed","status","ngOnInit","loadTasks","getTasks","subscribe","data","addTask","task","push","i0","ɵɵdirectiveInject","i1","TaskService","selectors","decls","vars","template","TaskListComponent_Template","rf","ctx","styles"],"sources":["C:\\task_manager\\task-manager\\src\\app\\task-list\\task-list.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { TaskService } from '../task.service';\nimport { Task } from '../models/task';\n\n@Component({\n  selector: 'app-task-list',\n  templateUrl: './task-list.component.html',\n  styleUrls: ['./task-list.component.css'],\n})\nexport class TaskListComponent implements OnInit {\n  tasks: Task[] = [];\n  newTask: Task = {\n    id: 0,\n    title: '',\n    description: '',\n    completed: false,\n    status: 'PENDING',\n  };\n\n  constructor(private taskService: TaskService) {}\n\n  ngOnInit(): void {\n    this.loadTasks();\n  }\n\n  // Charger toutes les tâches\n  loadTasks(): void {\n    this.taskService.getTasks().subscribe((data: Task[]) => {\n      this.tasks = data;\n    });\n  }\n\n  // Ajouter une tâche\n  addTask(): void {\n    if (this.newTask.title && this.newTask.description) {\n      this.taskService.addTask(this.newTask).subscribe((task: Task) => {\n        this.tasks.push(task);\n        this.newTask = { id: 0, title: '', description: '', completed: false, status: 'PENDING' }; // Réinitialiser la tâche\n      });\n    }\n  }\n\n \n}\n"],"mappings":";;AASA,OAAM,MAAOA,iBAAiB;EAU5BC,YAAoBC,WAAwB;IAAxB,KAAAA,WAAW,GAAXA,WAAW;IAT/B,KAAAC,KAAK,GAAW,EAAE;IAClB,KAAAC,OAAO,GAAS;MACdC,EAAE,EAAE,CAAC;MACLC,KAAK,EAAE,EAAE;MACTC,WAAW,EAAE,EAAE;MACfC,SAAS,EAAE,KAAK;MAChBC,MAAM,EAAE;KACT;EAE8C;EAE/CC,QAAQA,CAAA;IACN,IAAI,CAACC,SAAS,EAAE;EAClB;EAEA;EACAA,SAASA,CAAA;IACP,IAAI,CAACT,WAAW,CAACU,QAAQ,EAAE,CAACC,SAAS,CAAEC,IAAY,IAAI;MACrD,IAAI,CAACX,KAAK,GAAGW,IAAI;IACnB,CAAC,CAAC;EACJ;EAEA;EACAC,OAAOA,CAAA;IACL,IAAI,IAAI,CAACX,OAAO,CAACE,KAAK,IAAI,IAAI,CAACF,OAAO,CAACG,WAAW,EAAE;MAClD,IAAI,CAACL,WAAW,CAACa,OAAO,CAAC,IAAI,CAACX,OAAO,CAAC,CAACS,SAAS,CAAEG,IAAU,IAAI;QAC9D,IAAI,CAACb,KAAK,CAACc,IAAI,CAACD,IAAI,CAAC;QACrB,IAAI,CAACZ,OAAO,GAAG;UAAEC,EAAE,EAAE,CAAC;UAAEC,KAAK,EAAE,EAAE;UAAEC,WAAW,EAAE,EAAE;UAAEC,SAAS,EAAE,KAAK;UAAEC,MAAM,EAAE;QAAS,CAAE,CAAC,CAAC;MAC7F,CAAC,CAAC;;EAEN;;;;uBA/BWT,iBAAiB,EAAAkB,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,WAAA;IAAA;EAAA;;;YAAjBrB,iBAAiB;MAAAsB,SAAA;MAAAC,KAAA;MAAAC,IAAA;MAAAC,QAAA,WAAAC,2BAAAC,EAAA,EAAAC,GAAA;MAAAC,MAAA;IAAA;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}